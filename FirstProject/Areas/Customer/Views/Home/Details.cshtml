@model Product

<style>
	/* Hide number input arrows for all browsers */
	input[type="number"]::-webkit-inner-spin-button,
	input[type="number"]::-webkit-outer-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}

	input[type="number"] {
		-moz-appearance: textfield;
	}
</style>

@if (Model == null)
{
	<div class="container py-5 text-center">
		<h4 class="text-danger">Product not found.</h4>
	</div>
}
else
{
	<div class="container py-4" >
		<div class="card shadow border-0" style="min-height:70vh;">
			<div class="row g-0">

				<!-- Product Image -->
				<div class="col-md-5">
					<img src="@Url.Content(Model.ImageUrl ?? "~/images/default-featured-image.jpg")"
						 alt="@Model.Title"
						 class="img-fluid w-100 h-100 object-fit-cover rounded-top"
						 style="max-height: 500px;" />
				</div>

				<!-- Product Details -->
				<div class="col-md-7 p-4">
					<h2 class="fw-bold" title="@Model.Title">@Model.Title</h2>

					<!-- Price -->
					<div class="mb-3">
						<span class="text-muted text-decoration-line-through" title="Orignal Price">@Model.Price.ToString("c")</span>
						<span class="text-danger h5 fw-bold ms-2" title="Sale Price">@Model.Price50.ToString("c")</span>
					</div>

					<!-- Description -->
					<div class="mb-3">
						@{
							var shortDesc = Model.Description?.Length > 300 ? Model.Description.Substring(0, 300) + "..." : Model.Description;
						}
						<p class="text-muted">@Html.Raw(shortDesc)</p>
					</div>

					<!-- Category Badge -->
					<span class="badge bg-warning text-dark rounded-pill px-3 py-2 mb-3" title="Book Category">
						<i class="bi bi-bookmark-fill me-1"></i> @Model.Category?.Name
					</span>

					<!-- Quantity Selector -->
					<div class="d-flex align-items-center mb-3">
						<span class="me-2 fw-semibold">Quantity:</span>
						<div class="input-group border rounded-pill overflow-hidden" style="max-width: 150px;">
							<button class="btn btn-light border-0" title="Decrease quantity" type="button" onclick="decQty()">
								<i class="bi bi-dash-lg"></i>
							</button>
							<input type="number"
								   id="prdQty"
								   class="form-control text-center border-0 shadow-none"
								   value="1"
								   min="1"
								   step="1"
								   onchange="onChange()"
								   onkeydown="return preventInvalidKeys(event)" />
							<button class="btn btn-light border-0" title="Increase quantity" type="button" onclick="incQty()">
								<i class="bi bi-plus-lg"></i>
							</button>
						</div>
					</div>

					<!-- Add to Cart Button -->
					<button class="btn btn-info rounded-pill w-100 fw-bold text-white shadow">
						<i class="bi bi-cart-plus me-1"></i> Add to Cart
					</button>
				</div>
			</div>
		</div>
	</div>

	<!-- Quantity JS -->
	<script>
		const inp = document.getElementById("prdQty");

		function incQty() {
			inp.value = parseInt(inp.value) + 1;
		}

		function decQty() {
			if (parseInt(inp.value) > 1) {
				inp.value = parseInt(inp.value) - 1;
			}
		}

		function onChange() {
			inp.value = inp.value.replace(/[^0-9]/g, '');
			let val = parseInt(inp.value);
			if (isNaN(val) || val < 1) {
				inp.value = 1;
			}
		}

		function preventInvalidKeys(e) {
			if (["e", "E", "+", "-", "."].includes(e.key)) {
				e.preventDefault();
			}
		}
	</script>
}
